1.) In <relevant thing>.route.js (movies.route.js) add the routes shown in bold:

import ReviewsController from './reviews.controller.js'

router
    .route("/review")
    .post(ReviewsController.apiPostReview)
    .put(ReviewsController.apiUpdateReview)
    .delete(ReviewsController.apiDeleteReview)
    
2.) Next create <relevant thing>.controller.js our example is:

reviews.controller.js

3.) Add the following code to reviews.controller.js:

import ReviewsDAO from '../dao/reviewsDAO.js'

 export default class ReviewsController{
     static async apiPostReview(req,res,next){
         try{
             const movieId = req.body.movie_id 
             const review = req.body.review
             const userInfo = {
                 name: req.body.name,
                 _id: req.body.user_id
             }
         
            const date = new Date()

            const ReviewResponse = await ReviewsDAO.addReview( 
                movieId,
                userInfo,
                review,
                date
            )
            res.json({ status: "success "}) 
         }catch(e){
             res.status(500).json({ error: e.message})
         }
     }

     static async apiUpdateReview(req,res,next){
        try{
           const reviewId = req.body.review_id 
           const review = req.body.review                    

           const date = new Date()

           const ReviewResponse = await ReviewsDAO.updateReview( 
               reviewId,
               req.body.user_id, 
               review,
               date
           )

           var { error } = ReviewResponse
           if(error){
               res.status.json({error})
           }

           if(ReviewResponse.modifiedCount === 0){
            throw new Error ("unable to update review. User may not be original poster")
           }
           res.json({ status: "success "}) 
        }catch(e){
            res.status(500).json({ error: e.message})
        }
    }  
    
    static async apiDeleteReview(req,res,next){
        try{
           const reviewId = req.body.review_id 
           const userId = req.body.user_id
           const ReviewResponse = await ReviewsDAO.deleteReview( 
               reviewId,
               userId, 
           )
           
           res.json({ status: "success "}) 
        }catch(e){
            res.status(500).json({ error: e.message})
        }
    }    
    

}

Note that this code contains REVIEWS, apiUpdateView, and apiDeleteView

NEXT WE NEED TO CREATE ReviewsDAO
